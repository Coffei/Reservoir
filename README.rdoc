== Welcome to Reservoir
Reservoir is simple web application to manage room reservations.

== How to deploy
Currently, Reservoir is using JRuby and can be deployed on JBoss (or any other 
JavaEE container). First ensure you have JRuby installed (the version should support Ruby 1.9 syntax).
Then just follow these few steps:
1. Setup your database:
       Reservoir is configured to use Postgresql. If you want to use other
       DBMS you need to make some additional changes (if not follow step 1.2):
       
       1.1. Replace jdbcpostgresql adapter in GEMFILE with proper adapters for the
       DB of your choice.
	    
       1.2. Ensure your DB is running and is accessible from the machine where Reservoir
       is about to be deployed and from this machine.
       
       1.3. Configure your DB in reservoir by editing config/database.yml file. 
              (See rails tutorials for further instruction). By default it is using postgresql
              database named "reservoir" on localhost with username and password "reservoir".
       		
2. Setup Reservoir:
       2.1. Run "bundle install" in the Reservoir dir.
       
       2.2. Run "bundle exec rake RAILS_ENV=production db:migrate" to create tables with appropriate schema.
       
       2.3. Fill your DB with initial data by running "bundle exec rake RAILS_ENV=production db:seed".
       	If you have .sql file that you want to import, you can do it by placing the file to root of
       	Reservoir before running the command above.
       
       2.4. Run "bundle exec rake RAILS_ENV=production assets:precompile" to compile assets
            Note: This command might take a while (you can run it with --trace to see the progress)
            Note2: if you experience problems with assets loading twice (if calendar is rendered twice), 
            	   you may want to rename app/assets (to st. like app/assets.old)
       
       2.5. For the reset-password-mailer to work, you need to fill out the host, where the application will be running.
       Please do that in config/evnironments/production.rb. At the end of the file edit 'config.action_mailer.default_url_options'
       property.
       
       2.6. Package Reservoir to war by command "warble war".
       

3. Deploy:
       You can now deploy the generated war file to your JavaEE container.         
		
